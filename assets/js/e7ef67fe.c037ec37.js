"use strict";(self.webpackChunkfarm_docs=self.webpackChunkfarm_docs||[]).push([[560],{2225:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var t=i(6070),r=i(4331);const s={},o="JavaScript Plugins",l={id:"plugins/writing-plugins/js-plugin",title:"JavaScript Plugins",description:"A JavaScript plugin is simply a pure JavaScript object.",source:"@site/versioned_docs/version-0.x/plugins/writing-plugins/js-plugin.md",sourceDirName:"plugins/writing-plugins",slug:"/plugins/writing-plugins/js-plugin",permalink:"/docs/0.x/plugins/writing-plugins/js-plugin",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-fe/farm-fe.github.io/tree/main/versioned_docs/version-0.x/plugins/writing-plugins/js-plugin.md",tags:[],version:"0.x",frontMatter:{},sidebar:"pluginSidebar",previous:{title:"Rust Plugins",permalink:"/docs/0.x/plugins/writing-plugins/rust-plugin"}},a={},u=[];function p(n){const e={admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"javascript-plugins",children:"JavaScript Plugins"}),"\n",(0,t.jsx)(e.admonition,{title:"Js Plugins",type:"tip",children:(0,t.jsx)(e.p,{children:"A JavaScript plugin is simply a pure JavaScript object."})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:'// farm.config.ts\nimport { defineConfig } from "@farmfe/core";\n\nexport default defineConfig({\n  // ...\n  plugins: [\n    // a plugin object\n    {\n      name: "my-resolve-plugin",\n      priority: 1000, // the priority of this plugin, the larger the value, the earlier the execution. Normally internal plugins is 100.\n      resolve: {\n        filters: {\n          // Only execute the hook when following conditions satisfied\n          sources: ["\\\\./index.ts"], // a regex array\n          importers: ["None"],\n        },\n        executor: async (param) => {\n          // this hook executor\n          console.log(param); // resolve params\n          // return the resolve result\n          return {\n            resolvedPath: "virtual:my-module",\n            query: {},\n            sideEffects: false,\n            external: false,\n          };\n        },\n      },\n    },\n    // load, transform are similar to resolve, refer to their types\n  ],\n});\n'})}),"\n",(0,t.jsx)(e.p,{children:"If you want to pass args to your plugins\uff0cyou can use a closure."}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:'// my-resolve-plugin.ts\nexport function myResolvePlugin(options: Options) {\n  const { xx } = options;\n\n  return {\n    name: "my-resolve-plugin",\n    resolve: {\n      // ...\n    },\n  };\n}\n\n// farm.config.ts\nimport { defineConfig } from "@farmfe/core";\nimport { myResolvePlugin } from "./myResolvePlugin.ts";\n\nexport default defineConfig({\n  // ...\n  plugins: [myResolvePlugin({ xx: "xx" })],\n});\n'})})]})}function c(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}},4331:(n,e,i)=>{i.d(e,{R:()=>o,x:()=>l});var t=i(758);const r={},s=t.createContext(r);function o(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);